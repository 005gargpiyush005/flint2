/*============================================================================

    Copyright (C) 2009 William Hart

    This file is part of FLINT.

    FLINT is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    FLINT is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with FLINT; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA

===============================================================================*/

mp_limb_t n_gcd(mp_limb_t x, mp_limb_t y)

   Returns the gcd g of x and y. We require x >= y.

   The algorithm is a slight embelishment of the Euclidean algorithm
   which uses some branches to avoid most divisions.

   One wishes to compute the quotient and remainder of u3/v3 without 
   division where possible. This is accomplished when u3 < 4*v3, i.e. 
   the quotient is either 1, 2 or 3.

   We first compute s = u3 - v3. If s < v3, i.e. u3 < 2*v3, we know the
   quotient is 1, else if s < 2*v3, i.e. u3 < 3*v3 we know the quotient 
   is 2. In the remaining cases, the quotient must be 3. When the quotient
   is 4 or above, we use division. However this happens rarely for 
   generic inputs.