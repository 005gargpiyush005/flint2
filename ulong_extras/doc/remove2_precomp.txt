/*============================================================================

    Copyright (C) 2009 William Hart

    This file is part of FLINT.

    FLINT is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    FLINT is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with FLINT; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA

===============================================================================*/

int n_remove2_precomp(mp_limb_t * n, mp_limb_t p, double ppre)

   Remove the highest possible power of p from n, replacing
   n with the quotient. The return value is that highest 
   power of p that divided n. Assumes n is not 0. We require
   ppre to be set to a precomputed inverse of p computed 
   with n_precompute_inverse.

   For p = 2 trailing zeroes are counted. For other primes
   p we make repeated use of n_divrem2_precomp until division
   by p is no longer possible.