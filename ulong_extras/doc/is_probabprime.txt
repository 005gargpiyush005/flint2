/*============================================================================

    Copyright (C) 2009 William Hart

    This file is part of FLINT.

    FLINT is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    FLINT is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with FLINT; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA

===============================================================================*/

int n_is_probabprime(mp_limb_t n)

   Tests if n is a probable prime. Up to FLINT_ODDPRIME_SMALL_CUTOFF
   this algorithm uses n_is_oddprime_small which uses a lookup table.
   Next it calls n_compute_primes with the maximum table size and uses 
   this table to perform a binary search for n up to the table limit.
   Then up to 10^16 it uses a number of strong probable prime tests,
   n_is_strong_probabprime_precomp, etc., for various bases. The output 
   of the algorithm is guaranteed to be correct up to this bound due to
   exhaustive tables, described here:
   http://uucode.com/obf/dalbec/alg.html

   Beyond that point the BPSW probabilistic primality test is used,
   n_is_probabprime_BPSW. There are no known counterexamples, but it
   may well declare some composites to be prime.