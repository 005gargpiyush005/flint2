/*============================================================================

    Copyright (C) 2010 William Hart
    Copyright (C) 2010 Andy Novocin

    This file is part of FLINT.

    FLINT is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    FLINT is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with FLINT; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA

===============================================================================*/

********************************************************************************

  Memory management

********************************************************************************

void fmpz_mat_init(fmpz_mat_t mat, ulong rows, ulong cols)

   Initialise a matrix with the given number of rows and columns for use. 

void fmpz_mat_clear(fmpz_mat_t mat)

   Clear the given matrix.

void fmpz_mat_print(fmpz_mat_t mat) 

   Print the given matrix to stdout. The format is the number of rows, a
   space, the number of columns, two spaces, then a space separated list
   of coefficients.

void fmpz_mat_print_pretty(fmpz_mat_t mat) 

   Print the given matrix to stdout. The format is an opening square bracket
   then on each line a row of the matrix, followed by a closing square 
   bracket. Each row is written as an opening square bracket followed by a
   space separated list of coefficients followed by a closing square bracket.

void fmpz_mat_randbits(fmpz_mat_t mat, mp_bitcnt_t bits)

   Sets the entries of mat to random signed integers whose absolute values
   have the given number of binary bits.

void fmpz_mat_randtest(fmpz_mat_t mat, mp_bitcnt_t bits_in)

   Sets the entries of mat to random signed integers whose absolute values 
   have a random number of bits up to the given number of bits inclusive.

void fmpz_mat_randintrel(fmpz_mat_t mat, mp_bitcnt_t bits)

   Set mat to be a random "integer relations" matrix, with signed entries up 
   to the given number of bits. The number of columns of mat must be equal 
   to one more than the number of rows. The format of the matrix is a set of
   random integers in the left hand column and an identity matrix in the 
   remaining square submatrix.

void fmpz_mat_randsimdioph(fmpz_mat_t mat, mp_bitcnt_t bits, mp_bitcnt_t bits2)

   Set mat to a random "simultaneous diophantine" matrix. The matrix must
   be square. The top left entry is set to 2^bits2. The remainder of that
   row is then set to signed random integers of the given number of binary 
   bits. The remainder of the first column is zero. Running down the rest of
   the diagonal are the values 2^bits with all remaining entries zero.
  
